# ---- Build Stage ----
FROM node:20-alpine AS builder
WORKDIR /app

# Install deps
COPY package.json package-lock.json* ./
RUN npm ci --include=dev

# Copy source
COPY . .

# Build production assets
RUN npm run build

# ---- Production Stage ----
FROM nginx:1.25-alpine

# Install brotli for static precompressed serving (module included in alpine image)
RUN apk add --no-cache brotli

# Remove default config and add our tuned config
RUN rm /etc/nginx/conf.d/default.conf || true
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built assets
COPY --from=builder /app/dist /usr/share/nginx/html

# Ensure proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html

EXPOSE 80

# Leverage multiple workers; nginx will detect CPU cores by default
CMD ["nginx", "-g", "daemon off;"]


